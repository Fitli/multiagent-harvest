;; expolration
;;     random
;;     vision
;; eating
;;     greedy
;;     timeout
;; shooting
;;     vision
;;     radius
;;     enemy


to act
  if not try-shoot [
    eat-or-move
  ]
end

to eat-or-move
  if-else has-fruit [
    if not try-eat [
      search-food-random
    ]
  ][
    search-food
  ]
end

to search-food
  if not search-food-vision
  [ search-food-random ]
end


to search-food-random
  let new-heading random 3
  if new-heading = 0 []
  if new-heading = 1 [right 90]
  if new-heading = 2 [left 90]

  forward 1
end

to-report search-food-vision
  let dis-something false
  let cur-dist 1
  repeat eat-vision [
    if try-look-for-food cur-dist 0   [report true]
    if try-look-for-food cur-dist 90  [report true]
    if try-look-for-food cur-dist 180 [report true]
    if try-look-for-food cur-dist 270 [report true]
    set cur-dist cur-dist + 1
  ]
  report false
end

to-report try-look-for-food [dist h]
  let target patch-at-heading-and-distance h dist
  if target = nobody [report false]
  let treshold eat-treshold
  let has-food [want-eat treshold] of target
  if has-food [
    set heading h
    forward 1
    report true
  ]
  report false
end

to-report want-eat [treshold]
  if (not has-fruit) [report false]
  let nbs-with-fruit count neighbors with [has-fruit]
  report nbs-with-fruit > treshold
end


to-report try-eat
  ifelse eat-blocked-time > 0 [
    set eat-blocked-time eat-blocked-time - 1
    report false
  ][
    if eat-fruit [ 
      set eat-blocked-time eat-timeout
      report true
    ]
    report false
  ]
end

to-report count-fruit
  let x xcor
  let y ycor
  let vision eat-vision
  report count patches with [(pxcor >= x - vision) and (pycor >= y - vision) and (pxcor <= x + vision) and (pycor <= y + vision) and has-fruit]
end

to-report try-shoot
  ;; apply chance to shoot
  if random 100 >= shoot-chance [report false]
  
  let target search-shoot-target
  if target = nobody [report false]
  if-else count-fruit < shoot-treshold [ 
    create-link-with target
    ;; test accuracy
    if random 100 < shoot-accuracy [
      ask target [shot]
      ask my-links [set color red]
    ]
    report true
  ][
    report false
  ]
end

to-report search-shoot-target
  let possible-targets other turtles with [not hidden? and distance myself <= shoot-vision]
  let target one-of possible-targets
  report target
end
